parser: 'babel-eslint'

plugins: [ 'react' ]

ecmaFeatures:
  jsx: true

env:
  es6: true
  browser: true
  jasmine: true
  node: true

rules:
  array-bracket-spacing: 'off'
  camelcase: 'error'
  computed-property-spacing: ['error', 'never' ]
  consistent-return: 'error'
  curly: ['error', 'multi' ]
  dot-notation: 'off'
  eol-last: 'error'
  eqeqeq: 'error'
  keyword-spacing: 'error'
  max-len: ['error', 80, 4 ]
  new-cap: ['error', { capIsNew: false } ]
  no-eq-null: 'error'
  no-mixed-spaces-and-tabs: 'error'
  no-multiple-empty-lines: ['error', { max: 2 } ]
  no-trailing-spaces: 'error'
  no-use-before-define: ['error', 'nofunc' ]
  no-undef: 'error'
  no-underscore-dangle: 'off'
  no-unused-vars: 'warn'
  no-var: 'error'
  object-curly-spacing: ['error', 'always' ]
  quotes: ['error', 'single' ]
  semi: ['error', 'never' ]
  space-before-blocks: ['error', 'always' ]
  space-before-function-paren: ['off', 'always' ]
  no-warning-comments: [1, { terms: [ 'todo', 'fixme' ], location: 'anywhere' }]
  strict: 'off'
  vars-on-top: 'error'
  indent: ['error', 2, { SwitchCase: 1 } ]

  # React stuff.
  react/display-name: 'off'
  react/jsx-boolean-value: 'error'
  react/jsx-no-undef: 'error'
  react/jsx-sort-props: 'off'
  react/jsx-uses-react: 'error'
  react/jsx-uses-vars: 'error'
  react/no-did-mount-set-state: 'error'
  react/no-did-update-set-state: 'error'
  react/no-multi-comp: 'off'
  react/no-unknown-property: 'error'
  react/prop-types: 'error'
  react/react-in-jsx-scope: 'error'
  react/self-closing-comp: 'error'
  react/wrap-multilines: 'error'
